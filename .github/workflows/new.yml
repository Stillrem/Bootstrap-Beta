name: Upstream Release Notifier

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  check-upstream-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set axios
        run: npm install axios

      - name: Check for a new release
        id: check-release
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const axios = require('axios');
            const fs = require('fs');
            const path = require('path');
            const core = require('@actions/core');

            const upstreamRepo = 'roothide/Bootstrap';
            const apiURL = `https://api.github.com/repos/${upstreamRepo}/releases/latest`;
            const releaseFilePath = path.join(process.env.GITHUB_WORKSPACE, 'latest_release.txt');

            async function getLatestRelease() {
              try {
                const response = await axios.get(apiURL);
                return response.data;
              } catch (error) {
                console.error(`Unable to retrieve latest release data: ${error}`);
                return null;
              }
            }

            async function run() {
              const latestReleaseData = await getLatestRelease();
              if (!latestReleaseData) return;

              const latestRelease = latestReleaseData.tag_name;
              let previousRelease = '';
              if (fs.existsSync(releaseFilePath)) {
                previousRelease = fs.readFileSync(releaseFilePath, 'utf8');
              }

              if (latestRelease !== previousRelease) {
                fs.writeFileSync(releaseFilePath, latestRelease, 'utf8');
                console.log(`New release found: ${latestRelease}`);
                core.setOutput('new-release', latestRelease);

                const modifiedFiles = latestReleaseData.assets.map(asset => asset.name).join(', ');
                console.log(`Modified files: ${modifiedFiles}`);
              } else {
                console.log(`No new release found. Latest is still: ${previousRelease}`);
              }
            }

            run();
