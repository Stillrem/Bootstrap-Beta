name: Build and Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  check-for-changes:
    runs-on: macos-latest
    outputs:
      changes_detected: ${{ steps.check_changes.outputs.changes_detected }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        id: check_changes
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          git remote add upstream https://github.com/RootHide/Bootstrap
          git fetch upstream
          git fetch --all --prune
          git pull --rebase --strategy-option=theirs upstream main
          CHANGE_COUNT=$(git rev-list HEAD...upstream/main --count)
          if [ "$CHANGE_COUNT" -gt 0 ]; then
            echo "New changes detected"
            echo "changes_detected=true" >> $GITHUB_ENV
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "No changes since last build"
            echo "changes_detected=false" >> $GITHUB_ENV
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build RootHide Bootstrap
    runs-on: macos-latest
    needs: check-for-changes
    if: ${{ needs.check-for-changes.outputs.changes_detected == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Homebrew
        run: bash -c "$(curl -fsSL 'https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh')"

      - name: Install Theos
        run: bash -c "$(curl -fsSL 'https://raw.githubusercontent.com/roothide/theos/master/bin/install-theos')"

      - name: Install make
        run: brew install make

      - name: Setup Theos environment
        run: echo "THEOS=~/theos" >> $GITHUB_ENV

      - name: Set Version
        id: set_version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [[ $latest_tag =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            let "patch+=1"
            new_tag="v${major}.${minor}.${patch}"
          else
            echo "Failed to parse version tag: $latest_tag"
            exit 1
          fi
          echo "VERSION=${new_tag}" >> $GITHUB_ENV
          echo "New version is ${new_tag}"

      - name: Make bootstrap package
        run: make -j$(sysctl -n hw.ncpu) package

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Bootstrap.tipa
          path: ./packages/Bootstrap.tipa

      - name: Delete old release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create new release
        uses: ncipollo/release-action@v1
        with:
          name: Bootstrap_beta ${{ env.VERSION }} Release
          body: Installation of this beta file is at the user's own risk and responsibility. No person, including the developers and suppliers of this file, shall be held responsible for any consequences resulting from its installation on the user's phone.
          artifacts: "Bootstrap.tipa"
          tag: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
